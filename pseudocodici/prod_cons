PRODUTTORI/CONSUMATORI

concurrent program PRODUTTORI_CONSUMATORI;
N = ...
type messaggio = ...; indice = 0..N-1
var BUFFER: array[indice] of messaggio;
var T,D: indice; //T indice utilizzato per le estrazione e D indice usato per gli inserimenti
var PIENE, VUOTE: semaforo; //semaforo a conteggio, pari al numero di disponibilit√† del buffer di celle piene e vuote.
var USO_T, USO_D: semaforo_binario; //semafori binari in mutua esclusione su D e T

concurrent procedure PRODi
var M: messaggio
loop
	<<produci un messaggio in M>>
	P(VUOTE);
		P(USO_D);
			BUFFER[D] <- M;
			D <- (D+1)modN;
		V(USO_D);
	V(PIENE);
end

concurrent procedure CONSj
var M: messaggio;
loop 
	P(PIENE);
		P(USO_T);
			M <- BUFFER[T]
			T <- (T+1) mod N
		V(USO_T)
	V(VUOTE);
	<<consuma il messaggio>>
end

begin INIZ_SEM(USO_D, 1); INIZ_SEM(USO_T,1); 
	INIZ_SEM(PIENE, 0); INIZ_SEM(VUOTE,N);
	T <- 0; D <- 0;
	cobegin ...||PRODi||CONSj||... coend
end